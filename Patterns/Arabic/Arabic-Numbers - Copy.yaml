---
LangMarker: Ara
#Does this language use non-whitespace-separated numbers?
CompoundNumberLanguage: !bool false
#Does this culture uses period and comma intercheangeably as decimal separator?
MultiDecimalSeparatorCulture: !bool true
#Integer Regex
RoundNumberIntegerRegex: !simpleRegex
  def: (ال)?(?:مائة|آلاف|مائتين|مائتان|ثلاثمائة|أربعمائة|خمسمائة|ستمائة|سبعمائة|ثمانمائة|تسعمائة|ألف|ألفين|مليون|مليار|تريليون)
ZeroToNineIntegerRegex: !simpleRegex
  def: (ال)?(?:ثلاثة|سبعة|ثلاث|ثامن|ثمانية|أربعة|أربع|خمسة|صفر|تسعة|واحد|واحدة|اثنين|اثنتين|اثنان|اثنتين|ست|ستة)
TwoToNineIntegerRegex: !simpleRegex
  def: (ال)?(?:ثلاث|ثلاثة|سبعة|ثمان|ثمانية|أربع|أربعة|خمسة|تسعة|اثنان|اثنتان|اثنين|اثتنين|اثنتان|ست|ستة)
NegativeNumberTermsRegex: !simpleRegex
  def: (?<negTerm>(سالب|ناقص)\s+)
NegativeNumberSignRegex: !nestedRegex
  def: ^{NegativeNumberTermsRegex}.*
  references: [NegativeNumberTermsRegex]
AnIntRegex: !simpleRegex
  def: (واحد|أحد)(?=\s)
TenToNineteenIntegerRegex: !simpleRegex
  def: (?:سبعة عشر|ثلاثة عشر|أربعة عشر|ثمانية عشر|تسعة عشر|خمسة عشر|ستة عشر|حادية عشر|ثانية عشر|عشرة)
TensNumberIntegerRegex: !simpleRegex
  def: (?:سبعون|سبعين|عشرون|عشرين|ثلاثون|ثلاثين|ثمانون|ثمانين|تسعون|تسعين|أربعون|أربعين|خمسون|خمسين|ستون|ستين)
SeparaIntRegex: !nestedRegex
  def: (?:(({TenToNineteenIntegerRegex}|({ZeroToNineIntegerRegex}(\s+(و\s+)?|\s*-\s*){TensNumberIntegerRegex})|{TensNumberIntegerRegex}|{ZeroToNineIntegerRegex}|{RoundNumberIntegerRegex})(\s+{RoundNumberIntegerRegex})*))|(({AnIntRegex}(\s+{RoundNumberIntegerRegex})+))
  references:
    [
      TenToNineteenIntegerRegex,
      TensNumberIntegerRegex,
      ZeroToNineIntegerRegex,
      RoundNumberIntegerRegex,
      AnIntRegex,
    ]
AllIntRegex: !nestedRegex
  def: (?:({SeparaIntRegex})((\s+و\s+)({SeparaIntRegex})(\s+{RoundNumberIntegerRegex})?)*|((({TenToNineteenIntegerRegex}|({TensNumberIntegerRegex}(\s+(و\s+)?|\s*-\s*){ZeroToNineIntegerRegex})|{TensNumberIntegerRegex}|{ZeroToNineIntegerRegex}|{AnIntRegex})?(\s+{RoundNumberIntegerRegex})+)\s+(و\s+)?)*{SeparaIntRegex})
  references:
    [
      TenToNineteenIntegerRegex,
      TensNumberIntegerRegex,
      ZeroToNineIntegerRegex,
      AnIntRegex,
      RoundNumberIntegerRegex,
      SeparaIntRegex,
    ]
PlaceHolderPureNumber: !simpleRegex
  def: \b
PlaceHolderDefault: !simpleRegex
  def: \D|\b
NumbersWithPlaceHolder: !paramsRegex
  def: (((?<!\d+\s*)-\s*)|(?<=\b))\d+(?!([\.,]\d+[\u0621-\u064A]))(?={placeholder})
  params: [placeholder]
NumbersWithSuffix: !nestedRegex
  def: (((?<!\d+\s*)-\s*)|(?<=\b))\d+\s*{BaseNumbers.NumberMultiplierRegex}(?=\b)
  references: [BaseNumbers.NumberMultiplierRegex]
RoundNumberIntegerRegexWithLocks: !nestedRegex
  def: (?<=\b)\d+\s+{RoundNumberIntegerRegex}(?=\b)
  references: [RoundNumberIntegerRegex]
NumbersWithDozenSuffix: !simpleRegex
  def: (?<=\b)(\d+\s+)(دستة|دستات|دست)(?=\b)
AllIntRegexWithLocks: !nestedRegex
  def: ((?<=\b){AllIntRegex}(?=\b))
  references: [AllIntRegex]
AllIntRegexWithDozenSuffixLocks: !nestedRegex
  def: (?<=\b)(((نصف\s+)?(دستة))|(({AllIntRegex}\s+)(دستة|دستات|دست)))(?=\b)
  references: [AllIntRegex]
#Ordinal Regex
RoundNumberOrdinalRegex: !nestedRegex
  def: (?:(((من|على)\s+)|(ب))({RoundNumberIntegerRegex}))
  references: [RoundNumberIntegerRegex]
NumberOrdinalRegex: !simpleRegex
  def: (?:ثلث|ربع|خمس|سدس|سبع|نصف|ثمن|تسع|عشر|أنصاف|أثلاث|أرباع|أخماس|أسداس|أسباع|أثمان|أتساع|أعشر|أعشار|أول|أولى|ثاني|ثانية|ثالث|ثالثة|رابع|رابعة|خامس|خامسة|سادس|سادسة|سابع|سابعة|ثامن|ثامنة|تاسع|تاسعة|المليون|المليار|التريليون|المائة|المائتان|الثلاثمائة|الأربعمائة|الخمسمائة|الستمائة|التسعمائة|الألف)
RelativeOrdinalRegex: !simpleRegex
  def: (?<relativeOrdinal>((قبل|بعد|سبق|سبقت)(\s+))?((ال)?(تالي|سابق|قادم|آخر|أخير|حالي)(ة)?))
BasicOrdinalRegex: !nestedRegex
  def: ({NumberOrdinalRegex}|{RelativeOrdinalRegex})
  references: [NumberOrdinalRegex, RelativeOrdinalRegex]
SuffixBasicOrdinalRegex: !nestedRegex
  def: (?:(((({ZeroToNineIntegerRegex}(\s+و\s+){TensNumberIntegerRegex})|{TensNumberIntegerRegex}|{ZeroToNineIntegerRegex}|{AnIntRegex})(\s+{RoundNumberIntegerRegex})*)\s+(و\s+)?)*({TensNumberIntegerRegex}\s+)?{BasicOrdinalRegex}|{BasicOrdinalRegex})
  references:
    [
      TensNumberIntegerRegex,
      ZeroToNineIntegerRegex,
      AnIntRegex,
      RoundNumberIntegerRegex,
      BasicOrdinalRegex,
    ]
SuffixRoundNumberOrdinalRegex: !nestedRegex
  def: (?:({AllIntRegex}\s+){RoundNumberOrdinalRegex})
  references: [AllIntRegex, RoundNumberOrdinalRegex]
AllOrdinalRegex: !nestedRegex
  def: (?:{SuffixBasicOrdinalRegex}|{SuffixRoundNumberOrdinalRegex})
  references: [SuffixBasicOrdinalRegex, SuffixRoundNumberOrdinalRegex]
OrdinalNumericRegex: !simpleRegex
  def: (?<=\b)(?:\d{1,3}(\s*,\s*\d{3})*\s*th)(?=\b)
OrdinalRoundNumberRegex: !nestedRegex
  def: (?<!an?\s+){RoundNumberOrdinalRegex}
  references: [RoundNumberOrdinalRegex]
OrdinalEnglishRegex: !nestedRegex
  def: (?<=\b){AllOrdinalRegex}(?=\b)
  references: [AllOrdinalRegex]
#Fraction Regex
FractionNotationWithSpacesRegex: !simpleRegex
  def: (((?<=\W|^)-\s*)|(?<=\b))\d+\s+\d+[/]\d+(?=(\b[^/]|$))
FractionNotationRegex: !simpleRegex
  def: (((?<=\W|^)-\s*)|(?<![/-])(?<=\b))\d+[/]\d+(?=(\b[^/]|$))
FractionNounRegex: !nestedRegex
  def: (?<=\b)({AllIntRegex}\s+(و\s+)?)?({AllIntRegex}(\s+|\s*-\s*))?((({AllOrdinalRegex})|({RoundNumberOrdinalRegex}))|أنصاف|أرباع)(?=\b)
  references: [AllIntRegex, AllOrdinalRegex, RoundNumberOrdinalRegex]
FractionNounWithArticleRegex: !nestedRegex
  def: (?<=\b)((({AllIntRegex}\s+(و\s+)?)?(an?|one)(\s+|\s*-\s*)(?!\bfirst\b|\bsecond\b)(({AllOrdinalRegex})|({RoundNumberOrdinalRegex})|نصف|ربع))|(نصف))(?=\b)
  references: [AllIntRegex, AllOrdinalRegex, RoundNumberOrdinalRegex]
FractionPrepositionRegex: !nestedRegex
  def: (?<!{BaseNumbers.CommonCurrencySymbol}\s*)(?<=\b)(?<numerator>({AllIntRegex})|((?<![\.,])\d+))\s+(على|في|من)\s+(?<denominator>({AllIntRegex})|(\d+)(?![\.,]))(?=\b)
  references: [AllIntRegex, BaseNumbers.CommonCurrencySymbol]
FractionPrepositionWithinPercentModeRegex: !nestedRegex
  def: (?<!{BaseNumbers.CommonCurrencySymbol}\s*)(?<=\b)(?<numerator>({AllIntRegex})|((?<![\.,])\d+))\s+على\s+(?<denominator>({AllIntRegex})|(\d+)(?![\.,]))(?=\b)
  references: [AllIntRegex, BaseNumbers.CommonCurrencySymbol]
#Double Regex
AllPointRegex: !nestedRegex
  def: ((\s+{ZeroToNineIntegerRegex})+|(\s+{SeparaIntRegex}))
  references: [ZeroToNineIntegerRegex, SeparaIntRegex]
AllFloatRegex: !nestedRegex
  def: ({AllIntRegex}\s+(فاصلة|نقطة)\s+({AllPointRegex}|{AllOrdinalRegex}))
  references: [AllIntRegex, AllPointRegex]
DoubleWithMultiplierRegex: !nestedRegex
  def: (((?<!\d+\s*)-\s*)|((?<=\b)(?<!\d+[\.,])))\d+[\.,]\d+\s*{BaseNumbers.NumberMultiplierRegex}(?=\b)
  references: [BaseNumbers.NumberMultiplierRegex]
DoubleExponentialNotationRegex: !simpleRegex
  def: (((?<!\d+\s*)-\s*)|((?<=\b)(?<!\d+[\.,])))(\d+([\.,]\d+)?)e([+-]*[1-9]\d*)(?=\b)
DoubleCaretExponentialNotationRegex: !simpleRegex
  def: (((?<!\d+\s*)-\s*)|((?<=\b)(?<!\d+[\.,])))(\d+([\.,]\d+)?)\^([+-]*[1-9]\d*)(?=\b)
DoubleDecimalPointRegex: !paramsRegex
  def: (((?<!\d+\s*)-\s*)|((?<=\b)(?<!\d+[\.,])))\d+[\.,]\d+(?!([\.,]\d+))(?={placeholder})
  params: [placeholder]
DoubleWithoutIntegralRegex: !paramsRegex
  def: (?<=\s|^)(?<!(\d+))[\.,]\d+(?!([\.,]\d+))(?={placeholder})
  params: [placeholder]
DoubleWithRoundNumber: !nestedRegex
  def: (((?<!\d+\s*)-\s*)|((?<=\b)(?<!\d+[\.,])))\d+[\.,]\d+\s+{RoundNumberIntegerRegex}(?=\b)
  references: [RoundNumberIntegerRegex]
DoubleAllFloatRegex: !nestedRegex
  def: ((?<=\b){AllFloatRegex}(?=\b))
  references: [AllFloatRegex]
ConnectorRegex: !simpleRegex
  def: (?<spacer>and)
#Percentage Regex
NumberWithSuffixPercentage: !nestedRegex
  def: (?<!%)({BaseNumbers.NumberReplaceToken})(\s*)(%(?!{BaseNumbers.NumberReplaceToken})|(لكل\s*نسبة\b)
  references: [BaseNumbers.NumberReplaceToken]
FractionNumberWithSuffixPercentage: !nestedRegex
  def: (({BaseNumbers.FractionNumberReplaceToken})\s+من)
  references: [BaseNumbers.FractionNumberReplaceToken]
NumberWithPrefixPercentage: !nestedRegex
  def: (لكل\s*cents?\s+من)(\s*)({BaseNumbers.NumberReplaceToken})
  references: [BaseNumbers.NumberReplaceToken]
NumberWithPrepositionPercentage: !nestedRegex
  def: ({BaseNumbers.NumberReplaceToken})\s*(في|خارج\s+من)\s*({BaseNumbers.NumberReplaceToken})
  references: [BaseNumbers.NumberReplaceToken]
#NumberRange Regex
TillRegex: !simpleRegex
  def: (إلى|خلال|--|-|—|——|~|–)
MoreRegex: !simpleRegex
  def: (?:(أكبر|أغظم|أطول)(\s+من)?|(?<!<|=)>)
LessRegex: !simpleRegex
  def: (?:(أقل|اقل|اصغر|أصغر)(\s+من)?|تحت|(?<!>|=)<)
EqualRegex: !simpleRegex
  def: (يساوي|(?<!<|>)=)
MoreOrEqualPrefix: !nestedRegex
  def: (((ليس | لا)\s+{LessRegex})|(على\s+الأقل))
  references: [LessRegex]
MoreOrEqual: !nestedRegex
  def: (?:({MoreRegex}\s+(أو|او)?\s+{EqualRegex})|({EqualRegex}\s+(أو|او)?\s+{MoreRegex})|{MoreOrEqualPrefix}(\s+(أو|او)?\s+{EqualRegex})?|({EqualRegex}\s+(أو|او)?\s+)?{MoreOrEqualPrefix}|>\s*=)
  references: [MoreRegex, EqualRegex, LessRegex, MoreOrEqualPrefix]
MoreOrEqualSuffix: !simpleRegex
  def: ((and|or)\s+(((more|greater|higher|larger|bigger)((?!\s+than)|(\s+than(?!(\s*\d+)))))|((over|above)(?!\s+than))))
LessOrEqualPrefix: !nestedRegex
  def: ((no\s+{MoreRegex})|(at\s+most)|(up\s+to))
  references: [MoreRegex]
LessOrEqual: !nestedRegex
  def: (({LessRegex}\s+(or)?\s+{EqualRegex})|({EqualRegex}\s+(or)?\s+{LessRegex})|{LessOrEqualPrefix}(\s+(or)?\s+{EqualRegex})?|({EqualRegex}\s+(or)?\s+)?{LessOrEqualPrefix}|<\s*=)
  references: [LessRegex, EqualRegex, MoreRegex, LessOrEqualPrefix]
LessOrEqualSuffix: !simpleRegex
  def: ((and|or)\s+(less|lower|smaller|fewer)((?!\s+than)|(\s+than(?!(\s*\d+)))))
NumberSplitMark: !simpleRegex
  def: (?![,.](?!\d+))
MoreRegexNoNumberSucceed: !simpleRegex
  def: ((bigger|greater|more|higher|larger)((?!\s+than)|\s+(than(?!(\s*\d+))))|(above|over)(?!(\s*\d+)))
LessRegexNoNumberSucceed: !simpleRegex
  def: ((less|lower|smaller|fewer)((?!\s+than)|\s+(than(?!(\s*\d+))))|(below|under)(?!(\s*\d+)))
EqualRegexNoNumberSucceed: !simpleRegex
  def: (equal(s|ing)?((?!\s+(to|than))|(\s+(to|than)(?!(\s*\d+)))))
OneNumberRangeMoreRegex1: !nestedRegex
  def: ({MoreOrEqual}|{MoreRegex})\s*(ال)?(?<number1>({NumberSplitMark}.)+)
  references: [MoreOrEqual, MoreRegex, NumberSplitMark]
OneNumberRangeMoreRegex2: !nestedRegex
  def: (?<number1>({NumberSplitMark}.)+)\s*{MoreOrEqualSuffix}
  references: [MoreOrEqualSuffix, NumberSplitMark]
OneNumberRangeMoreSeparateRegex: !nestedRegex
  def: ({EqualRegex}\s+(?<number1>({NumberSplitMark}.)+)(\s+or\s+){MoreRegexNoNumberSucceed})|({MoreRegex}\s+(?<number1>({NumberSplitMark}.)+)(\s+or\s+){EqualRegexNoNumberSucceed})
  references:
    [
      EqualRegex,
      MoreRegex,
      EqualRegexNoNumberSucceed,
      MoreRegexNoNumberSucceed,
      NumberSplitMark,
    ]
OneNumberRangeLessRegex1: !nestedRegex
  def: ({LessOrEqual}|{LessRegex})\s*(ال)?(?<number2>({NumberSplitMark}.)+)
  references: [LessOrEqual, LessRegex, NumberSplitMark]
OneNumberRangeLessRegex2: !nestedRegex
  def: (?<number2>({NumberSplitMark}.)+)\s*{LessOrEqualSuffix}
  references: [LessOrEqualSuffix, NumberSplitMark]
OneNumberRangeLessSeparateRegex: !nestedRegex
  def: ({EqualRegex}\s+(?<number1>({NumberSplitMark}.)+)(\s+or\s+){LessRegexNoNumberSucceed})|({LessRegex}\s+(?<number1>({NumberSplitMark}.)+)(\s+or\s+){EqualRegexNoNumberSucceed})
  references:
    [
      EqualRegex,
      LessRegex,
      EqualRegexNoNumberSucceed,
      LessRegexNoNumberSucceed,
      NumberSplitMark,
    ]
OneNumberRangeEqualRegex: !nestedRegex
  def: '{EqualRegex}\s*(ال)?(?<number1>({NumberSplitMark}.)+)'
  references: [EqualRegex, NumberSplitMark]
TwoNumberRangeRegex1: !nestedRegex
  def: بين\s*(ال)?(?<number1>({NumberSplitMark}.)+)\s*و\s*(ال)?(?<number2>({NumberSplitMark}.)+)
  references: [NumberSplitMark]
TwoNumberRangeRegex2: !nestedRegex
  def: ({OneNumberRangeMoreRegex1}|{OneNumberRangeMoreRegex2})\s*(و|لكن|,)\s*({OneNumberRangeLessRegex1}|{OneNumberRangeLessRegex2})
  references:
    [
      OneNumberRangeMoreRegex1,
      OneNumberRangeMoreRegex2,
      OneNumberRangeLessRegex1,
      OneNumberRangeLessRegex2,
    ]
TwoNumberRangeRegex3: !nestedRegex
  def: ({OneNumberRangeLessRegex1}|{OneNumberRangeLessRegex2})\s*(و|لكن|,)\s*({OneNumberRangeMoreRegex1}|{OneNumberRangeMoreRegex2})
  references:
    [
      OneNumberRangeMoreRegex1,
      OneNumberRangeMoreRegex2,
      OneNumberRangeLessRegex1,
      OneNumberRangeLessRegex2,
    ]
TwoNumberRangeRegex4: !nestedRegex
  def: (من\s+)?(?<number1>({NumberSplitMark}(?!\من\b).)+)\s*{TillRegex}\s*(ال)?(?<number2>({NumberSplitMark}.)+)
  references: [TillRegex, NumberSplitMark]
AmbiguousFractionConnectorsRegex: !simpleRegex
  def: (\bمن|في|بين|من|بين\b)
# "in" is ambiguous for cases like "more than 30000 in 2009", other connector "out of", "over" is not ambiguous in English
#Parser
DecimalSeparatorChar: !char "."
FractionMarkerToken: أكثر
NonDecimalSeparatorChar: !char ","
HalfADozenText: ستة
WordSeparatorToken: و
WrittenDecimalSeparatorTexts: [نقطة | فاصلة]
WrittenGroupSeparatorTexts: [punto]
WrittenIntegerSeparatorTexts: [و]
WrittenFractionSeparatorTexts: [و]
HalfADozenRegex: !simpleRegex
  def: نصف?\sدستة
DigitalNumberRegex: !nestedRegex
  def: ((?<=\b)(مائة|مائتان|دست|ألف|ألفين|مائتين|ألفين|ثلاثمائة|أربعمائة|خمسمائة|ستمائة|سبعمائة|تسعمائة|ثمانمائة|مليون|مليار|ترليون)(?=\b))|((?<=(\d|\b)){BaseNumbers.MultiplierLookupRegex}(?=\b))
  references: [BaseNumbers.MultiplierLookupRegex]
CardinalNumberMap: !dictionary
  types: [string, long]
  entries:
    واحد: 1
    صفر: 0
    اثنان: 2
    اثنين: 2
    ثلاثة: 3
    أربعة: 4
    خمسة: 5
    ستة: 6
    سبعة: 7
    ثمانية: 8
    تسعة: 9
    عشرة: 10
    إحدى عشر: 11
    اثنى عشر: 12
    دستة: 12
    دستات: 12
    ثلاثة عشر: 13
    أربعة عشر: 14
    خمسة عشر: 15
    ستة عشر: 16
    سبعة عشر: 17
    ثمانية عشر: 18
    تسعة عشر: 19
    عشرون: 20
    ثلاثون: 30
    أربعون: 40
    خمسون: 50
    ستون: 60
    سبعون: 70
    ثمانون: 80
    تسعون: 90
    مائة: 100
    مائتين: 200
    مائتان: 200
    ثلاثمائة: 300
    أربعمائة: 400
    خمسمائة: 500
    ستمائة: 600
    سبعمائة: 700
    ثمانمائة: 800
    تسعمائة: 900
    ألف: 1000
    آلاف: 1000
    ألفين: 2000
    مليون: 1000000
    مليار: 1000000000
    تريليون: 1000000000000
    الواحد: 1
    الصفر: 0
    الاثنان: 2
    الاثنين: 2
    الثلاثة: 3
    الأربعة: 4
    الخمسة: 5
    الستة: 6
    السبعة: 7
    الثمانية: 8
    التسعة: 9
    العشرة: 10
    الإحدى عشر: 11
    الاثنى عشر: 12
    الدستة: 12
    الدستات: 12
    الثلاثة عشر: 13
    الأربعة عشر: 14
    الخمسة عشر: 15
    الستة عشر: 16
    السبعة عشر: 17
    الثمانية عشر: 18
    التسعة عشر: 19
    العشرون: 20
    الثلاثون: 30
    الأربعون: 40
    الخمسون: 50
    الستون: 60
    السبعون: 70
    الثمانون: 80
    التسعون: 90
    المائة: 100
    المائتين: 200
    المائتان: 200
    الثلاثمائة: 300
    الأربعمائة: 400
    الخمسمائة: 500
    الستمائة: 600
    السبعمائة: 700
    الثمانمائة: 800
    التسعمائة: 900
    الألف: 1000
    الآلاف: 1000
    الألفين: 2000
    المليون: 1000000
    المليار: 1000000000
    التريليون: 1000000000000

OrdinalNumberMap: !dictionary
  types: [string, long]
  entries:
    أول: 1
    ثاني: 2
    ثان: 2
    نصف: 2
    ثلث: 3
    ربع: 4
    خمس: 5
    سدس: 6
    سبع: 7
    ثمن: 8
    تسع: 9
    واحد من عشرة: 10
    واحد من إحدى عشر: 11
    واحد من إثنى عشر: 12
    واحد من ثلاثة عشر: 13
    واحد من أربعة عشر: 14
    واحد من خمسة عشر: 15
    واحد من ستة عشر: 16
    واحد من سبعة عشر: 17
    واحد من ثمانية عشر: 18
    واحد من تسعة عشر: 19
    واحد من عشرين: 20
    واحد من ثلاثين: 30
    واحد من أربعين: 40
    واحد من خمسين: 50
    واحد من ستين: 60
    واحد من سبعين: 70
    واحد من ثمانين: 80
    واحد من تسعين: 90
    واحد من مائة: 100
    واحد من ألف: 1000
    واحد من مليون: 1000000
    واحد من مليار: 1000000000
    واحد من تريليون: 1000000000000
    أوائل: 1
    أنصاف: 2
    أثلاث: 3
    أرباع: 4
    أخماس: 5
    أسداس: 6
    أسباع: 7
    أثمان: 8
    أتساع: 9
    أعشار: 10
    عشرينات: 20
    ثلاثينات: 30
    أربعينات: 40
    خمسينات: 50
    ستينات: 60
    سبعينات: 70
    ثمانينات: 80
    تسعينات: 90
    مئات: 100
    ألوف: 1000
    ملايين: 1000000
    مليارات: 1000000000
    بليونات: 1000000000000
RoundNumberMap: !dictionary
  types: [string, long]
  entries:
    مائة: 100
    ألف: 1000
    مليون: 1000000
    مليار: 1000000000
    تريليون: 1000000000000
    مائة: 100
    مائتين: 200
    مائتان: 200
    ثلاثمائة: 300
    أربعمائة: 400
    خمسمائة: 500
    ستمائة: 600
    سبعمائة: 700
    ثمانمائة: 800
    تسعمائة: 900
    ألف: 1000
    ألفين: 2000
    مليون: 1000000
    مليار: 1000000000
    تريليون: 1000000000000
    دستة: 12
    دستات: 12
    المائة: 100
    الألف: 1000
    المليون: 1000000
    المليار: 1000000000
    التريليون: 1000000000000
    المائة: 100
    المائتين: 200
    المائتان: 200
    الثلاثمائة: 300
    الأربعمائة: 400
    الخمسمائة: 500
    الستمائة: 600
    السبعمائة: 700
    الثمانمائة: 800
    التسعمائة: 900
    الألف: 1000
    الألفين: 2000
    المليون: 1000000
    المليار: 1000000000
    التريليون: 1000000000000
    الدستة: 12
    الدستات: 12
AmbiguityFiltersDict: !dictionary
  types: [string, string]
  entries:
    '\bواحد\b': '\b(الذي|هذا|ذلك|ذاك)\s+(one)\b'
RelativeReferenceOffsetMap: !dictionary
  types: [string, string]
  entries:
    آخر: 0
    الأخيرة: 0
    الأخير: 0
    سبقت الأخيرة: -1
    سبقت الأخير: -1
    قبل الأخير: -1
    قبل الأخيرة: -1
    القبل الأخير: -1
    التالي: 1
    قادم: 1
    قادمة: 1
    القادم: 1
    القادمة: 1
    السابقة: 0
    الحالي: 0
    الحالية: 0
    السابق: -1
RelativeReferenceRelativeToMap: !dictionary
  types: [string, string]
  entries:
    آخر: end
    الأخيرة: end
    الأخير: end
    سبقت الأخيرة: end
    سبقت الأخير: end
    قبل الأخير: end
    قبل الأخيرة: end
    القبل الأخير: end
    التالي: current
    قادم: current
    القادمة: current
    القادم: current
    قادمة: current
    السابق: current
    السابقة: current
    الحالية: current
    الحالي: current
...
